@page "/editformdemo"
@inject ILogger<EditFormDemo> log
@rendermode InteractiveAuto

<h3>EditForm</h3>

<!-- This is a MS provided form that provides failry basic form functionality that will work well with Blazor-->
<EditForm Model="Person" method="post" FormName="PersonForm" OnSubmit="SubmitForm">
    <div>
        <label for="FirstName">First Name:</label>
        <InputText id="FirstName" @bind-Value="Person.FirstName" /> <!-- This bind tot he First Name property of the Person Model-->
    </div>
    <div>
        <label for="LastName">Last Name</label>
        <InputText id="LastName" @bind-Value="Person.LastName" /> <!-- Binds to the Last Name property-->
    </div>

    <button class="btn btn-primary" type="submit">
        Add Person
    </button>
</EditForm>

<p>Below is a list of people who have filled out the form. You will see a name appear here once the form has been submitted. Now, what you will notice is that the name will 
    be replaced on each submission, instead of adding it to the People list. Uh oh!</p>
<p>This is because the component is refreshing on the submission, thus, resetting the People list to a new list. To fix this, we added the rendermode InteractiveAuto, and now
    the list will be updated with each submission. Adding this will only refresh what changed, not everything in the component
</p>
@if(People.Count > 0)
{
    <h3>People who have filled out the form</h3>
    <ul>
        @foreach (var person in People)
        {
            <li>@person.FirstName @person.LastName</li>
        }
    </ul>
}


<p> This is an example of an enhanced form. This form will not require a full page refresh on submission. Only the component will refresh here.</p>
<EditForm Enhance Model="Person" method="post" FormName="PersonFormEnahnce" OnSubmit="SubmitForm">
    <div>
        <label for="FirstName">First Name:</label>
        <InputText id="FirstName" @bind-Value="Person.FirstName" /> <!-- This bind tot he First Name property of the Person Model-->
    </div>
    <div>
        <label for="LastName">Last Name</label>
        <InputText id="LastName" @bind-Value="Person.LastName" /> <!-- Binds to the Last Name property-->
    </div>

    <button class="btn btn-primary" type="submit">
        Add Person
    </button>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private Person Person { get; set; } = new();

    List<Person> People = new List<Person>();

    private void SubmitForm()
    {
        log.LogInformation($"The persons name: {Person.FirstName} {Person.LastName}");
        People.Add(Person);
        Person = new Person();
    }
}
